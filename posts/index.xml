<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on ruin</title>
    <link>https://tk-zzz.github.io/posts/</link>
    <description>Recent content in Posts on ruin</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 21 Jul 2020 02:15:49 +0900</lastBuildDate>
    
	<atom:link href="https://tk-zzz.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>【VSCode】VSCodeでmarkdownをpreviewする方法</title>
      <link>https://tk-zzz.github.io/posts/2020/vscode_markdown_preview/</link>
      <pubDate>Tue, 21 Jul 2020 02:15:49 +0900</pubDate>
      
      <guid>https://tk-zzz.github.io/posts/2020/vscode_markdown_preview/</guid>
      <description>VSCodeで編集しているmarkdownファイルをpreviewするには、
MACなら
command + K　-&amp;gt; V
Windowsなら
ctrl + K -&amp;gt; V
で可能。
pluginなどは不要なので気軽に試すことができました。</description>
    </item>
    
    <item>
      <title>【VSCode】 vim　pluginでクリップボードを有効にする</title>
      <link>https://tk-zzz.github.io/posts/2020/vscode_vim_clipboard/</link>
      <pubDate>Tue, 21 Jul 2020 02:08:28 +0900</pubDate>
      
      <guid>https://tk-zzz.github.io/posts/2020/vscode_vim_clipboard/</guid>
      <description>VSCodeのvim pluginを利用中、クリップボードを有効にする方法。
左下の設定ボタンからSettings を開き、vim clipboardなどと検索すると
Vim : Use System Clipboardという項目があるのでこれを有効にするだけで完了。
jsonファイルのほうで設定するなら
&amp;quot;vim.useSystemClipboard&amp;quot;: true
とすれば良さそう。</description>
    </item>
    
    <item>
      <title>【Android】 Dialogの外をタップしたりバックキーで閉じなくする方法</title>
      <link>https://tk-zzz.github.io/posts/2020/android_dialog_cancelable/</link>
      <pubDate>Tue, 21 Jul 2020 01:46:47 +0900</pubDate>
      
      <guid>https://tk-zzz.github.io/posts/2020/android_dialog_cancelable/</guid>
      <description>通常ダイアログの外をタップしたり、バックキーでダイアログは閉じてしまう。
しかし、通信中や認証などダイアログを閉じられたくない場合には Dialog#setCencelable(false) をすれば良い。
https://developer.android.com/reference/android/app/Dialog#setCancelable(boolean)</description>
    </item>
    
    <item>
      <title>【Linux】shredでUSB接続したSSDを完全消去</title>
      <link>https://tk-zzz.github.io/posts/2020/shred_sub/</link>
      <pubDate>Fri, 03 Jul 2020 00:41:20 +0900</pubDate>
      
      <guid>https://tk-zzz.github.io/posts/2020/shred_sub/</guid>
      <description>PCを売却する前に、Linuxコマンドのshredを使って消去したメモ。
買取業者などではなくフリマアプリで売れたので、データを復元されないように消去する方法を調べていた。
調べた中でLinuxコマンドのshredが手軽にできそうだったので試してみた。
このコマンドはストレージを完全に消去してしまうので、 参考にする場合はよく確認しながら自己責任でお願いします。
責任は一切負いません。
手順１ 売却するPCのSSDを取り出し、USB接続できるケースで別のLinux機に接続。
手順２ fdisk -l で接続したUSBストレージのデバイス名を探す。
つないでいるストレージの容量や、非接続時のコマンドの結果から /dev/sdc と判明。
手順３ shred -n 5 -v -z /dev/sdc を実行。
オプションの-nはshredをかける回数。-v は現在の進捗がコンソールに表示されるようになる。
-zは最後にすべての領域に0を書き込んで終わるようです。
256GBのSSDで実行しましたが、全て完了するまで3時間程度かかっていたように思います。</description>
    </item>
    
    <item>
      <title>AsepriteをMacのLaunchPadに登録する方法</title>
      <link>https://tk-zzz.github.io/posts/2020/aseprite_to_launchpad/</link>
      <pubDate>Sun, 21 Jun 2020 00:38:31 +0900</pubDate>
      
      <guid>https://tk-zzz.github.io/posts/2020/aseprite_to_launchpad/</guid>
      <description>自分でビルドしたAsepriteを起動するとき、いちいちCUIでコマンドを叩くのが面倒なので 他のアプリのようにLaunchPadから起動できるようにした。
Macアプリの開発経験は無いので、こうやったらとりあえずうまく動いてるよ的なメモ。
Aseprite以外でも自力でビルドしたアプリを同じ方法で登録できるはず。
Finderに登録する まずはほかアプリのようにFinderのアプリケーションから起動できるようにする。
まず
mkdir -p /Application/Aseprite.app/Contents/MacOS/ で必要なディレクトリを作成。
続いてMacOSディレクトリ配下にAsepriteのbuildディレクトリ配下に生成されたものをすべて移動する。
この時点でFinderのApplicationからクリックなどで起動できるようになる。
LaunchPadに登録する ここまでではまだLaunchPadに表示されなかった。
MacのアプリにはInfo.plistというファイルでアプリの情報を管理しているようだ。
これがあるとLaunchPadに表示されるようになる。
asepriteをビルドしているプロジェクトがGithubにあったので、これをまずコピーしてみたらこの時点でLaunchPadに表示されるようになった。
しかし、クリックするとアプリが起動しなくなったし、アイコンもデフォルトのもののままだ。
まず、アイコンに関してはこのファイルをダウンロードして、Contents/Resourcesディレクトリを作成しそこに追加した。
Info.plistについては、自分はアイコンを表示したいだけなので下記のように内容を削除していったらアイコンが表示され、アプリもクリックで起動できるようになった。
&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;!DOCTYPE plist PUBLIC &amp;#34;-//Apple//DTD PLIST 1.0//EN&amp;#34; &amp;#34;http://www.apple.com/D TDs/PropertyList-1.0.dtd&amp;#34;&amp;gt; &amp;lt;plist version=&amp;#34;1.0&amp;#34;&amp;gt; &amp;lt;dict&amp;gt; &amp;lt;key&amp;gt;CFBundleIconFile&amp;lt;/key&amp;gt; &amp;lt;string&amp;gt;applet.icns&amp;lt;/string&amp;gt; &amp;lt;key&amp;gt;CFBundleName&amp;lt;/key&amp;gt; &amp;lt;string&amp;gt;Aseprite&amp;lt;/string&amp;gt; &amp;lt;/dict&amp;gt; &amp;lt;/plist&amp;gt; LaunchPadに表示されるアイコンはInfo.plistの情報を変えるとすぐに反映されるわけではないようなので、
うまく反映されないときは一度再起動をすると良いかもしれない。</description>
    </item>
    
    <item>
      <title>MacでAsepriteをビルド</title>
      <link>https://tk-zzz.github.io/posts/2020/aseprite_build/</link>
      <pubDate>Sat, 20 Jun 2020 10:45:59 +0900</pubDate>
      
      <guid>https://tk-zzz.github.io/posts/2020/aseprite_build/</guid>
      <description>OSSのドット絵制作ツールAsepriteをビルドしたときに躓いたところをメモ。
基本的にはINSTALL.mdにかかれている通りにやれば良い。
依存するものをインストール 自分の環境ではcmake ninja skiaが入っていなかったためそれぞれインストールした。
cmakeとninjaはHomebrewでインストール
brew install cmake
brew install ninja
skiaは記載されているリンクからビルド済みのものをダウンロードし、 $HOME/deps/ に展開した。
cmake INSTALL.mdのMacのところにかかれている通りにcmakeのコマンドを打つと、 CMakeListが無いようなエラーがでた。
INSTALL.mdではbuildディレクトリを作って移動するように書かれているが、このせいで直下にCMakeListが無い。
-B buildをコマンドに追加することでcmakeが走った。
下記が実行したコマンド
cmake \ -DCMAKE_BUILD_TYPE=RelWithDebInfo \ -DCMAKE_OSX_ARCHITECTURES=x86_64 \ -DCMAKE_OSX_DEPLOYMENT_TARGET=10.9 \ -DCMAKE_OSX_SYSROOT=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk \ -DLAF_BACKEND=skia \ -DSKIA_DIR=$HOME/deps/skia \ -DSKIA_LIBRARY_DIR=$HOME/deps/skia/out/Release-x64 \ -B build \ -G Ninja \ ninja cmakeが終わったら ninja aseprite でビルドが完了するようだが、ここもでもかなり詰まった。
まず、ninja asepriteはbuildディレクトリでする。
実行するとエラーが出るが、再びコマンドを叩くとタスクは進んでいく。
しかし、そのうちエラーでタスクが進まなくなった。 エラー内容は下記。
Building CXX object src/net/CMakeFiles/net-lib.dir/http_request.cpp.o FAILED: src/net/CMakeFiles/net-lib.dir/http_request.cpp.o /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/c++ -DCMARK_STATIC_DEFINE -DCURL_STATICLIB -DENABLE_DATA_RECOVERY -DENABLE_NEWS -DENABLE_SAVE -DENABLE_SCRIPTING -DENABLE_UI -DENABLE_UPDATER -DHAVE_CONFIG_H -DLAF_SKIA -DNDEBUG -DPNG_NO_MMX_CODE -I.</description>
    </item>
    
    <item>
      <title>【Android】モジュール追加 私はこんな風にしてます</title>
      <link>https://tk-zzz.github.io/posts/2020/android_add_module/</link>
      <pubDate>Wed, 27 May 2020 01:22:34 +0900</pubDate>
      
      <guid>https://tk-zzz.github.io/posts/2020/android_add_module/</guid>
      <description>Androidでモジュールを追加するとき。 例えば
modules/features/example/ui というディレクトリのexample-uiモジュールを作りたいとき。
AndroidStudioの左側Projectのあたりで右クリックし
New &amp;gt; Module するとダイアログがでてくるので
Android Library を選択し
Application/Library name → example-ui Module name → :modules:features:example:ui package name → com.hogehoge.example.ui としてFinishすることで完了。</description>
    </item>
    
    <item>
      <title>【Git】削除ファイルなども含めて戻す方法</title>
      <link>https://tk-zzz.github.io/posts/2020/git_checkout_f/</link>
      <pubDate>Mon, 25 May 2020 16:04:46 +0900</pubDate>
      
      <guid>https://tk-zzz.github.io/posts/2020/git_checkout_f/</guid>
      <description>git checkout . で今いるブランチの最新のCommitにもどせるが、削除したファイルなどは戻らず削除されたままとなる。
実際に
git status すると削除したファイルが残っていることが確認できる。
しかし、
git checkout -f と-fをつけると、削除したファイルも含めてもとに戻すことができる。
（これをしらなくてCloneし直したりしていた…）</description>
    </item>
    
    <item>
      <title>【Kotlin】List#mapについて</title>
      <link>https://tk-zzz.github.io/posts/2020/kotlin_list_map/</link>
      <pubDate>Fri, 22 May 2020 02:42:02 +0900</pubDate>
      
      <guid>https://tk-zzz.github.io/posts/2020/kotlin_list_map/</guid>
      <description>List#mapで各要素に処理を行い、その返却値を値に入れたlistを返却する。
resources.map {it.toGroupieItem()} 上記のようなコードで少し悩んでいたが、resourcesというlistの各要素がtoGroupieItem()で GroupieItemに変換されて、それが入ったあらたなListが返却されていたということだった。
参考：https://qiita.com/kiririnyo/items/aee905225902d096f7c0#map-mapindexed-mapnotnull</description>
    </item>
    
    <item>
      <title>【Hugo】Coder themeでGoogle Adsenseのコードを入れる</title>
      <link>https://tk-zzz.github.io/posts/2020/add_google_adsense_code/</link>
      <pubDate>Fri, 22 May 2020 01:47:13 +0900</pubDate>
      
      <guid>https://tk-zzz.github.io/posts/2020/add_google_adsense_code/</guid>
      <description>私が現在このブログで使っているCoderでGoogle Adsenseのコードを入れてみた。
テンプレートでいじるファイルはlayout/_default/baseof.html。
このファイルの&amp;lt;head&amp;gt;の任意の場所にAdsenseのコードを貼ると、全てのページに適用された。
ちなみに私は一番最後の
{{ hugo.Generator }} の下に挿入しました。
現在審査中…
テンプレの残っている部分が多いので審査が通らないような気がする。</description>
    </item>
    
    <item>
      <title>【vim】 一つずつ確認しながら置換</title>
      <link>https://tk-zzz.github.io/posts/2020/vim_replace/</link>
      <pubDate>Wed, 20 May 2020 19:05:45 +0900</pubDate>
      
      <guid>https://tk-zzz.github.io/posts/2020/vim_replace/</guid>
      <description>下記コマンドで開いているファイル内の文字列を置換できる。
:%s/&amp;#34;置換前文字列&amp;#34;/&amp;#34;置換後文字列&amp;#34;/gc ここからはオプションの解説。
:%s/&amp;#34;置換前文字列&amp;#34;/&amp;#34;置換後文字列&amp;#34; オプションをつけないと、一行の中で複数ヒットする場合でも１つ目だけが置換される。
:%s/&amp;#34;置換前文字列&amp;#34;/&amp;#34;置換後文字列&amp;#34;/g 後ろにgを入れると一行内に複数ヒットしてもすべて置換される。
:%s/&amp;#34;置換前文字列&amp;#34;/&amp;#34;置換後文字列&amp;#34;/gc そしてヒットした文字列を一つずつ確認したい場合はcをつけます。</description>
    </item>
    
    <item>
      <title>【Git】ローカルブランチを全削除する</title>
      <link>https://tk-zzz.github.io/posts/2020/remove_all_branches/</link>
      <pubDate>Mon, 18 May 2020 11:58:28 +0900</pubDate>
      
      <guid>https://tk-zzz.github.io/posts/2020/remove_all_branches/</guid>
      <description>このコマンドでmaster以外のローカルブランチをすべて削除できる。
(masterも削除しようとするが消せないので結果的にmasterだけ残る)
git branch | xargs git branch -D また、例えば任意の文字列を含むブランチを消したい場合はgrepをかませることで実現できる。
たとえばfeature/~~~というブランチを全部削除する場合は下記のようにしている。
git branch | grep feature | xargs git branch -D ただ、これだとfeature/~~~のブランチだけでなくfeatureが含まれる名前のブランチすべてが削除されるので注意。</description>
    </item>
    
    <item>
      <title>FragmentのonCreateViewとonViewCreated</title>
      <link>https://tk-zzz.github.io/posts/2020/fragment_oncreateview_onviewcreate/</link>
      <pubDate>Wed, 15 Apr 2020 00:00:00 +0900</pubDate>
      
      <guid>https://tk-zzz.github.io/posts/2020/fragment_oncreateview_onviewcreate/</guid>
      <description>FragmentのonCreateViewとonViewCreatedの違い。
あまり意識をしていなかったが、ドキュメントに下記の記載がある。
 It is recommended to only inflate the layout in this method and move logic that operates on the returned View to onViewCreated(View, Bundle).
https://developer.android.com/reference/kotlin/androidx/fragment/app/Fragment.html#oncreateview
 つまり、onCreteViewではレイアウトのinflateだけを行い、他の処理はonViewCreatedで行うことが推奨されている。</description>
    </item>
    
    <item>
      <title>間違えてgit commit --amendしてしまったときの解決方法</title>
      <link>https://tk-zzz.github.io/posts/2020/solution_git_commit_amend/</link>
      <pubDate>Thu, 20 Feb 2020 00:00:00 +0900</pubDate>
      
      <guid>https://tk-zzz.github.io/posts/2020/solution_git_commit_amend/</guid>
      <description>間違えてgit commit -a &amp;ndash;amendしてしまい、 一つ前のcommitに入れたくない変更が入ってしまった。
git resetで戻そうと思い、git logで履歴を確認するが 先頭がamendしたcommitになっておりresetできなくて困った。
解決方法 git reflogでHEADの変更履歴がみれるので、 amendする前の状態にresetすることができる。
resetしたあと普通にgit commit -aすることで解決した。</description>
    </item>
    
    <item>
      <title>android studioのJavaの場所</title>
      <link>https://tk-zzz.github.io/posts/2020/android_studio_java_location/</link>
      <pubDate>Fri, 10 Jan 2020 00:00:00 +0900</pubDate>
      
      <guid>https://tk-zzz.github.io/posts/2020/android_studio_java_location/</guid>
      <description>ターミナルからgradleビルドをするときにandroid studioで使っているものと同じものを使いたいと思い、
Preferenceあたりを探したがなかなか見つからなかったのでメモ。
結論としてはAndroidStudioのPreferenceではなく
File &amp;gt; Project Structure &amp;gt; SDK Location のJDK locationに見つけた。
下記のように.zshrcに追加した。
export JAVA_HOME=/Applications/Android\ Studio.app/Contents/jre/jdk/Contents/Home export PATH=$PATH:$JAVA_HOME/bin </description>
    </item>
    
    <item>
      <title>Initial commitに後続のcommitを含めたい</title>
      <link>https://tk-zzz.github.io/posts/2020/rebase_initial_commit/</link>
      <pubDate>Fri, 10 Jan 2020 00:00:00 +0900</pubDate>
      
      <guid>https://tk-zzz.github.io/posts/2020/rebase_initial_commit/</guid>
      <description>Initial commitに後続のcommitを含めたかったので、
git rebase -i HEAD^^^ したところ、
fatal: Needed a single revision invalid upstream &amp;#39;HEAD^^^&amp;#39; と表示されてできない。
調べてみると
git rebase -i --root でInitial commitを含めたrebaseができるらしい。
実際にやってみるといつものrebase画面にInitialCommitが表示されたので、
普段のrebaseと同様にsquashすることで後続のCommitを消してInitalCommitに含めることができた。</description>
    </item>
    
    <item>
      <title>Ubuntu18.04でスリープ解除後にBluetoothがオフになる場合の対処法</title>
      <link>https://tk-zzz.github.io/posts/2019/ubuntu_bluetooth/</link>
      <pubDate>Thu, 19 Dec 2019 00:00:00 +0900</pubDate>
      
      <guid>https://tk-zzz.github.io/posts/2019/ubuntu_bluetooth/</guid>
      <description>Ubuntu18.04をノートPCに入れて使っているが、スリープ解除後にbluetoothが効かなくなるときがある。
とりあえず下記コマンドでサービスをリスタートすると再びBluetoothをONできるようになる。
systemctl restart bluetooth.service </description>
    </item>
    
  </channel>
</rss>